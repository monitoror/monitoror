---
name: continuous-delivery

# Trigger deployment on tags
on:
  push:
    tags:
      - '*'

# Jobs definition
jobs:
  build-demo:
    name: Build / Demo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
        id: go

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: ui / install
        working-directory: ui
        run: npm ci

      - name: core / install
        run: |
          go get github.com/GeertJohan/go.rice/rice
          make install

      - name: ui / build
        working-directory: ui
        env:
          VITE_APP_TITLE: "Demo â€” Monitoror, unified monitoring wallboard"
          VITE_APP_CANONICAL_URL: https://demo.monitoror.com
        run: npm run build

      - name: core / build
        run: |
          # https://github.com/actions/setup-go/issues/14
          export PATH=${PATH}:`go env GOPATH`/bin
          # Set MB_ENVIRONMENT
          if [[ $GITHUB_REF == refs/tags/* ]]; then export MB_ENVIRONMENT=production; fi
          make build-faker-linux-amd64

      - uses: actions/upload-artifact@v1
        with:
          name: binaries
          path: binaries

  deploy-demo:
    name: Deploy / Demo
    needs: [build-demo]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Init
        id: init
        run: |
          VERSION=$(cat VERSION)
          echo ::set-output name=VERSION::$VERSION

      - uses: actions/download-artifact@v1
        with:
          name: binaries

      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEMO_HOST }}
          username: ${{ secrets.DEMO_USERNAME }}
          key: ${{ secrets.DEMO_SSH_KEY }}
          port: 22
          source: "binaries/monitoror-linux-amd64-${{ steps.init.outputs.VERSION }}-faker"
          target: "/tmp/"
          strip_components: 1

      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEMO_HOST }}
          username: ${{ secrets.DEMO_USERNAME }}
          key: ${{ secrets.DEMO_SSH_KEY }}
          port: 22
          script: |
            sudo systemctl stop monitoror
            mv -f /tmp/monitoror-linux-amd64-${{ steps.init.outputs.VERSION }}-faker /opt/monitoror/monitoror-linux-amd64-faker
            chmod +x /opt/monitoror/monitoror-linux-amd64-faker
            sudo systemctl start monitoror
